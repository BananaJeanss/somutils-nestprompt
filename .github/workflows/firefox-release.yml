name: Firefox Release

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
    
    - name: Get version from manifest
      id: get_version
      run: |
        VERSION=$(grep '"version"' manifest_v2.json | sed -E 's/.*"version": "([^"]+)".*/\1/')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Check if release exists
      id: check_release
      run: |
        if gh release view "firefox-v${{ env.VERSION }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Firefox extension package
      if: steps.check_release.outputs.exists == 'false'
      run: |
        # Create a temporary directory for the extension files
        mkdir -p temp-firefox-extension
        
        # Copy all necessary files (only if they exist)
        # For Firefox, we use manifest_v2.json but rename it to manifest.json
        cp manifest_v2.json temp-firefox-extension/manifest.json
        [ -f background.js ] && cp background.js temp-firefox-extension/
        [ -f content.js ] && cp content.js temp-firefox-extension/
        [ -f styles.css ] && cp styles.css temp-firefox-extension/
        [ -f icon16.png ] && cp icon16.png temp-firefox-extension/
        [ -f icon48.png ] && cp icon48.png temp-firefox-extension/
        [ -f icon128.png ] && cp icon128.png temp-firefox-extension/
        [ -f PrivacyPolicy.md ] && cp PrivacyPolicy.md temp-firefox-extension/
        
        # Create the ZIP file with version in filename
        cd temp-firefox-extension
        zip -r ../firefox-extension-${{ env.VERSION }}.zip .
        
        # Go back to the root directory
        cd ..
        
        # Clean up the temporary directory
        rm -rf temp-firefox-extension
    
    - name: Upload Firefox extension artifact
      if: steps.check_release.outputs.exists == 'false'
      uses: actions/upload-artifact@v4
      with:
        name: firefox-extension-${{ env.VERSION }}
        path: firefox-extension-${{ env.VERSION }}.zip
        retention-days: 30
    
    - name: Create Release
      if: steps.check_release.outputs.exists == 'false'
      run: |
        gh release create "firefox-v${{ env.VERSION }}" \
          --title "Firefox Extension v${{ env.VERSION }}" \
          --notes "Automated release for Firefox Extension v${{ env.VERSION }}" \
          firefox-extension-${{ env.VERSION }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}