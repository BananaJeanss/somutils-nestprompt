name: Chrome Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
    
    - name: Get version from manifest
      id: get_version
      run: |
        VERSION=$(grep '"version"' manifest.json | sed -E 's/.*"version": "([^"]+)".*/\1/')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Create Chrome extension package
      run: |
        # Create a temporary directory for the extension files
        mkdir -p temp-chrome-extension
        
        # Copy all necessary files
        cp manifest.json temp-chrome-extension/
        cp background.js temp-chrome-extension/
        cp content.js temp-chrome-extension/
        cp styles.css temp-chrome-extension/
        cp icon16.png temp-chrome-extension/
        cp icon48.png temp-chrome-extension/
        cp icon128.png temp-chrome-extension/
        cp PrivacyPolicy.md temp-chrome-extension/
        
        # Create the ZIP file with version in filename
        cd temp-chrome-extension
        zip -r ../chrome-extension-${{ env.VERSION }}.zip .
        
        # Go back to the root directory
        cd ..
        
        # Clean up the temporary directory
        rm -rf temp-chrome-extension
    
    - name: Upload Chrome extension artifact
      uses: actions/upload-artifact@v4
      with:
        name: chrome-extension
        path: chrome-extension-${{ env.VERSION }}.zip
        retention-days: 30
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: chrome-v${{ env.VERSION }}
        release_name: Chrome Extension v${{ env.VERSION }}
        draft: false
        prerelease: false
      if: github.event_name == 'release'
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./chrome-extension-${{ env.VERSION }}.zip
        asset_name: chrome-extension-${{ env.VERSION }}.zip
        asset_content_type: application/zip
      if: github.event_name == 'release'